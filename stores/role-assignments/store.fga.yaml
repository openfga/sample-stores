model: |

  # We want to enable each organization to define a "Project Admin" role. 
  # Permissions are the same for all project admins, but each project can have different admins

  model
    schema 1.1    

    type user

    # The `role` type has all the permissions that can be assigned to any role.
    # When a role has the permission enabled, we write a tuple like:
    #      user: user:*
    #      relation: can_edit_project
    #      object: role:project-admin

    type role
      relations
        define can_edit_project: [user:*]
        define can_view_project: [user:*]

        # If we later want to add a `can_delete_project` permission to a role, we need to define this new relation
        # define can_delete_project: [user:*]

    # We'll link users and roles in a `role_assignment` type. 
    # You will have a role_assignment instance per project, and it will have all the users assigned to the role.
    type role_assignment
      relations
        define assignee: [user]
        define role: [role]

        # These will evaluate to `true` if the user is assigned to the role_assignment 
        # and the role has the permission enabled
        define can_view_project: assignee and can_view_project from role
        define can_edit_project: assignee and can_edit_project from role
    
        # To add a `can_delete_project` permission to a role, we need to define this new relation
        # define can_delete_project: assignee and can_delete_project from role

    type organization
      relations
        define admin: [user]

    type project
      relations
        define organization: [organization]
        define role_assignment: [role_assignment]

        # We use the role_assignment to decide if the user has the permission, and also consider static roles like `admin`
        define can_view: can_view_project from role_assignment or admin from organization
        define can_edit: can_edit_project from role_assignment or admin from organization

        # To add a `can_delete_project` permission to a role, we need to define this new relation
        # define can_delete: can_delete_project from role_assignment or admin from organization

tuples:
    # Organization Acme creates a 'project admin' role that includes the can_view_project
    # and can_edit_project permissions

    - user: user:*
      relation: can_view_project
      object: role:acme-project-admin      

    - user: user:*
      relation: can_edit_project
      object: role:acme-project-admin    
      
    # When we want to assign a user as a Project admin for a specific project, we need to make sure these tuples are created first (two per project). 
    # We assign the role_assignment to the project, and the role to the role_assignment.
    # In this case we have an 'openfga' and a 'java-sdk' project

    - user: role_assignment:acme-project-admin-openfga
      relation: role_assignment
      object: project:openfga

    - user: role:acme-project-admin 
      relation: role
      object: role_assignment:acme-project-admin-openfga

    - user: role_assignment:acme-project-admin-java-sdk
      relation: role_assignment
      object: project:java-sdk

    - user: role:acme-project-admin
      relation: role
      object: role_assignment:acme-project-admin-java-sdk

    # We can now assign the project admins for each project to the role assignment instance
    - user: user:anne
      relation: assignee
      object: role_assignment:acme-project-admin-openfga

    - user: user:bob
      relation: assignee
      object: role_assignment:acme-project-admin-java-sdk

    # To enable all members of the `project-admin` role, for any project, to delete projects, 
    # we need to add a single tuple enabling the permission in the role.
    # - user: user:*
    #   relation: can_delete_project
    #   object: role:acme-project-admin    

tests:
    - check:
        - user: user:anne
          object: project:openfga
          assertions:
            can_view: true
            can_edit: true

        - user: user:bob
          object: project:openfga
          assertions:
            can_view: false
            can_edit: false

        - user: user:bob
          object: project:java-sdk
          assertions:
            can_view: true
            can_edit: true

        - user: user:anne
          object: project:java-sdk
          assertions:
            can_view: false
